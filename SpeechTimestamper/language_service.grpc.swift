//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/language/v1/language_service.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Foundation
import Dispatch
import SwiftGRPC
import SwiftProtobuf

internal protocol Google_Cloud_Language_V1_LanguageServiceAnalyzeSentimentCall: ClientCallUnary {}

fileprivate final class Google_Cloud_Language_V1_LanguageServiceAnalyzeSentimentCallBase: ClientCallUnaryBase<Google_Cloud_Language_V1_AnalyzeSentimentRequest, Google_Cloud_Language_V1_AnalyzeSentimentResponse>, Google_Cloud_Language_V1_LanguageServiceAnalyzeSentimentCall {
  override class var method: String { return "/google.cloud.language.v1.LanguageService/AnalyzeSentiment" }
}

internal protocol Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitiesCall: ClientCallUnary {}

fileprivate final class Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitiesCallBase: ClientCallUnaryBase<Google_Cloud_Language_V1_AnalyzeEntitiesRequest, Google_Cloud_Language_V1_AnalyzeEntitiesResponse>, Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitiesCall {
  override class var method: String { return "/google.cloud.language.v1.LanguageService/AnalyzeEntities" }
}

internal protocol Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitySentimentCall: ClientCallUnary {}

fileprivate final class Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitySentimentCallBase: ClientCallUnaryBase<Google_Cloud_Language_V1_AnalyzeEntitySentimentRequest, Google_Cloud_Language_V1_AnalyzeEntitySentimentResponse>, Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitySentimentCall {
  override class var method: String { return "/google.cloud.language.v1.LanguageService/AnalyzeEntitySentiment" }
}

internal protocol Google_Cloud_Language_V1_LanguageServiceAnalyzeSyntaxCall: ClientCallUnary {}

fileprivate final class Google_Cloud_Language_V1_LanguageServiceAnalyzeSyntaxCallBase: ClientCallUnaryBase<Google_Cloud_Language_V1_AnalyzeSyntaxRequest, Google_Cloud_Language_V1_AnalyzeSyntaxResponse>, Google_Cloud_Language_V1_LanguageServiceAnalyzeSyntaxCall {
  override class var method: String { return "/google.cloud.language.v1.LanguageService/AnalyzeSyntax" }
}

internal protocol Google_Cloud_Language_V1_LanguageServiceClassifyTextCall: ClientCallUnary {}

fileprivate final class Google_Cloud_Language_V1_LanguageServiceClassifyTextCallBase: ClientCallUnaryBase<Google_Cloud_Language_V1_ClassifyTextRequest, Google_Cloud_Language_V1_ClassifyTextResponse>, Google_Cloud_Language_V1_LanguageServiceClassifyTextCall {
  override class var method: String { return "/google.cloud.language.v1.LanguageService/ClassifyText" }
}

internal protocol Google_Cloud_Language_V1_LanguageServiceAnnotateTextCall: ClientCallUnary {}

fileprivate final class Google_Cloud_Language_V1_LanguageServiceAnnotateTextCallBase: ClientCallUnaryBase<Google_Cloud_Language_V1_AnnotateTextRequest, Google_Cloud_Language_V1_AnnotateTextResponse>, Google_Cloud_Language_V1_LanguageServiceAnnotateTextCall {
  override class var method: String { return "/google.cloud.language.v1.LanguageService/AnnotateText" }
}


/// Instantiate Google_Cloud_Language_V1_LanguageServiceServiceClient, then call methods of this protocol to make API calls.
internal protocol Google_Cloud_Language_V1_LanguageServiceService: ServiceClient {
  /// Synchronous. Unary.
  func analyzeSentiment(_ request: Google_Cloud_Language_V1_AnalyzeSentimentRequest) throws -> Google_Cloud_Language_V1_AnalyzeSentimentResponse
  /// Asynchronous. Unary.
  func analyzeSentiment(_ request: Google_Cloud_Language_V1_AnalyzeSentimentRequest, completion: @escaping (Google_Cloud_Language_V1_AnalyzeSentimentResponse?, CallResult) -> Void) throws -> Google_Cloud_Language_V1_LanguageServiceAnalyzeSentimentCall

  /// Synchronous. Unary.
  func analyzeEntities(_ request: Google_Cloud_Language_V1_AnalyzeEntitiesRequest) throws -> Google_Cloud_Language_V1_AnalyzeEntitiesResponse
  /// Asynchronous. Unary.
  func analyzeEntities(_ request: Google_Cloud_Language_V1_AnalyzeEntitiesRequest, completion: @escaping (Google_Cloud_Language_V1_AnalyzeEntitiesResponse?, CallResult) -> Void) throws -> Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitiesCall

  /// Synchronous. Unary.
  func analyzeEntitySentiment(_ request: Google_Cloud_Language_V1_AnalyzeEntitySentimentRequest) throws -> Google_Cloud_Language_V1_AnalyzeEntitySentimentResponse
  /// Asynchronous. Unary.
  func analyzeEntitySentiment(_ request: Google_Cloud_Language_V1_AnalyzeEntitySentimentRequest, completion: @escaping (Google_Cloud_Language_V1_AnalyzeEntitySentimentResponse?, CallResult) -> Void) throws -> Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitySentimentCall

  /// Synchronous. Unary.
  func analyzeSyntax(_ request: Google_Cloud_Language_V1_AnalyzeSyntaxRequest) throws -> Google_Cloud_Language_V1_AnalyzeSyntaxResponse
  /// Asynchronous. Unary.
  func analyzeSyntax(_ request: Google_Cloud_Language_V1_AnalyzeSyntaxRequest, completion: @escaping (Google_Cloud_Language_V1_AnalyzeSyntaxResponse?, CallResult) -> Void) throws -> Google_Cloud_Language_V1_LanguageServiceAnalyzeSyntaxCall

  /// Synchronous. Unary.
  func classifyText(_ request: Google_Cloud_Language_V1_ClassifyTextRequest) throws -> Google_Cloud_Language_V1_ClassifyTextResponse
  /// Asynchronous. Unary.
  func classifyText(_ request: Google_Cloud_Language_V1_ClassifyTextRequest, completion: @escaping (Google_Cloud_Language_V1_ClassifyTextResponse?, CallResult) -> Void) throws -> Google_Cloud_Language_V1_LanguageServiceClassifyTextCall

  /// Synchronous. Unary.
  func annotateText(_ request: Google_Cloud_Language_V1_AnnotateTextRequest) throws -> Google_Cloud_Language_V1_AnnotateTextResponse
  /// Asynchronous. Unary.
  func annotateText(_ request: Google_Cloud_Language_V1_AnnotateTextRequest, completion: @escaping (Google_Cloud_Language_V1_AnnotateTextResponse?, CallResult) -> Void) throws -> Google_Cloud_Language_V1_LanguageServiceAnnotateTextCall

}

internal final class Google_Cloud_Language_V1_LanguageServiceServiceClient: ServiceClientBase, Google_Cloud_Language_V1_LanguageServiceService {
  /// Synchronous. Unary.
  internal func analyzeSentiment(_ request: Google_Cloud_Language_V1_AnalyzeSentimentRequest) throws -> Google_Cloud_Language_V1_AnalyzeSentimentResponse {
    return try Google_Cloud_Language_V1_LanguageServiceAnalyzeSentimentCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func analyzeSentiment(_ request: Google_Cloud_Language_V1_AnalyzeSentimentRequest, completion: @escaping (Google_Cloud_Language_V1_AnalyzeSentimentResponse?, CallResult) -> Void) throws -> Google_Cloud_Language_V1_LanguageServiceAnalyzeSentimentCall {
    return try Google_Cloud_Language_V1_LanguageServiceAnalyzeSentimentCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func analyzeEntities(_ request: Google_Cloud_Language_V1_AnalyzeEntitiesRequest) throws -> Google_Cloud_Language_V1_AnalyzeEntitiesResponse {
    return try Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitiesCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func analyzeEntities(_ request: Google_Cloud_Language_V1_AnalyzeEntitiesRequest, completion: @escaping (Google_Cloud_Language_V1_AnalyzeEntitiesResponse?, CallResult) -> Void) throws -> Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitiesCall {
    return try Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitiesCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func analyzeEntitySentiment(_ request: Google_Cloud_Language_V1_AnalyzeEntitySentimentRequest) throws -> Google_Cloud_Language_V1_AnalyzeEntitySentimentResponse {
    return try Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitySentimentCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func analyzeEntitySentiment(_ request: Google_Cloud_Language_V1_AnalyzeEntitySentimentRequest, completion: @escaping (Google_Cloud_Language_V1_AnalyzeEntitySentimentResponse?, CallResult) -> Void) throws -> Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitySentimentCall {
    return try Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitySentimentCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func analyzeSyntax(_ request: Google_Cloud_Language_V1_AnalyzeSyntaxRequest) throws -> Google_Cloud_Language_V1_AnalyzeSyntaxResponse {
    return try Google_Cloud_Language_V1_LanguageServiceAnalyzeSyntaxCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func analyzeSyntax(_ request: Google_Cloud_Language_V1_AnalyzeSyntaxRequest, completion: @escaping (Google_Cloud_Language_V1_AnalyzeSyntaxResponse?, CallResult) -> Void) throws -> Google_Cloud_Language_V1_LanguageServiceAnalyzeSyntaxCall {
    return try Google_Cloud_Language_V1_LanguageServiceAnalyzeSyntaxCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func classifyText(_ request: Google_Cloud_Language_V1_ClassifyTextRequest) throws -> Google_Cloud_Language_V1_ClassifyTextResponse {
    return try Google_Cloud_Language_V1_LanguageServiceClassifyTextCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func classifyText(_ request: Google_Cloud_Language_V1_ClassifyTextRequest, completion: @escaping (Google_Cloud_Language_V1_ClassifyTextResponse?, CallResult) -> Void) throws -> Google_Cloud_Language_V1_LanguageServiceClassifyTextCall {
    return try Google_Cloud_Language_V1_LanguageServiceClassifyTextCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func annotateText(_ request: Google_Cloud_Language_V1_AnnotateTextRequest) throws -> Google_Cloud_Language_V1_AnnotateTextResponse {
    return try Google_Cloud_Language_V1_LanguageServiceAnnotateTextCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func annotateText(_ request: Google_Cloud_Language_V1_AnnotateTextRequest, completion: @escaping (Google_Cloud_Language_V1_AnnotateTextResponse?, CallResult) -> Void) throws -> Google_Cloud_Language_V1_LanguageServiceAnnotateTextCall {
    return try Google_Cloud_Language_V1_LanguageServiceAnnotateTextCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

}

/// To build a server, implement a class that conforms to this protocol.
/// If one of the methods returning `ServerStatus?` returns nil,
/// it is expected that you have already returned a status to the client by means of `session.close`.
internal protocol Google_Cloud_Language_V1_LanguageServiceProvider: ServiceProvider {
  func analyzeSentiment(request: Google_Cloud_Language_V1_AnalyzeSentimentRequest, session: Google_Cloud_Language_V1_LanguageServiceAnalyzeSentimentSession) throws -> Google_Cloud_Language_V1_AnalyzeSentimentResponse
  func analyzeEntities(request: Google_Cloud_Language_V1_AnalyzeEntitiesRequest, session: Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitiesSession) throws -> Google_Cloud_Language_V1_AnalyzeEntitiesResponse
  func analyzeEntitySentiment(request: Google_Cloud_Language_V1_AnalyzeEntitySentimentRequest, session: Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitySentimentSession) throws -> Google_Cloud_Language_V1_AnalyzeEntitySentimentResponse
  func analyzeSyntax(request: Google_Cloud_Language_V1_AnalyzeSyntaxRequest, session: Google_Cloud_Language_V1_LanguageServiceAnalyzeSyntaxSession) throws -> Google_Cloud_Language_V1_AnalyzeSyntaxResponse
  func classifyText(request: Google_Cloud_Language_V1_ClassifyTextRequest, session: Google_Cloud_Language_V1_LanguageServiceClassifyTextSession) throws -> Google_Cloud_Language_V1_ClassifyTextResponse
  func annotateText(request: Google_Cloud_Language_V1_AnnotateTextRequest, session: Google_Cloud_Language_V1_LanguageServiceAnnotateTextSession) throws -> Google_Cloud_Language_V1_AnnotateTextResponse
}

extension Google_Cloud_Language_V1_LanguageServiceProvider {
  internal var serviceName: String { return "google.cloud.language.v1.LanguageService" }

  /// Determines and calls the appropriate request handler, depending on the request's method.
  /// Throws `HandleMethodError.unknownMethod` for methods not handled by this service.
  internal func handleMethod(_ method: String, handler: Handler) throws -> ServerStatus? {
    switch method {
    case "/google.cloud.language.v1.LanguageService/AnalyzeSentiment":
      return try Google_Cloud_Language_V1_LanguageServiceAnalyzeSentimentSessionBase(
        handler: handler,
        providerBlock: { try self.analyzeSentiment(request: $0, session: $1 as! Google_Cloud_Language_V1_LanguageServiceAnalyzeSentimentSessionBase) })
          .run()
    case "/google.cloud.language.v1.LanguageService/AnalyzeEntities":
      return try Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitiesSessionBase(
        handler: handler,
        providerBlock: { try self.analyzeEntities(request: $0, session: $1 as! Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitiesSessionBase) })
          .run()
    case "/google.cloud.language.v1.LanguageService/AnalyzeEntitySentiment":
      return try Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitySentimentSessionBase(
        handler: handler,
        providerBlock: { try self.analyzeEntitySentiment(request: $0, session: $1 as! Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitySentimentSessionBase) })
          .run()
    case "/google.cloud.language.v1.LanguageService/AnalyzeSyntax":
      return try Google_Cloud_Language_V1_LanguageServiceAnalyzeSyntaxSessionBase(
        handler: handler,
        providerBlock: { try self.analyzeSyntax(request: $0, session: $1 as! Google_Cloud_Language_V1_LanguageServiceAnalyzeSyntaxSessionBase) })
          .run()
    case "/google.cloud.language.v1.LanguageService/ClassifyText":
      return try Google_Cloud_Language_V1_LanguageServiceClassifyTextSessionBase(
        handler: handler,
        providerBlock: { try self.classifyText(request: $0, session: $1 as! Google_Cloud_Language_V1_LanguageServiceClassifyTextSessionBase) })
          .run()
    case "/google.cloud.language.v1.LanguageService/AnnotateText":
      return try Google_Cloud_Language_V1_LanguageServiceAnnotateTextSessionBase(
        handler: handler,
        providerBlock: { try self.annotateText(request: $0, session: $1 as! Google_Cloud_Language_V1_LanguageServiceAnnotateTextSessionBase) })
          .run()
    default:
      throw HandleMethodError.unknownMethod
    }
  }
}

internal protocol Google_Cloud_Language_V1_LanguageServiceAnalyzeSentimentSession: ServerSessionUnary {}

fileprivate final class Google_Cloud_Language_V1_LanguageServiceAnalyzeSentimentSessionBase: ServerSessionUnaryBase<Google_Cloud_Language_V1_AnalyzeSentimentRequest, Google_Cloud_Language_V1_AnalyzeSentimentResponse>, Google_Cloud_Language_V1_LanguageServiceAnalyzeSentimentSession {}

internal protocol Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitiesSession: ServerSessionUnary {}

fileprivate final class Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitiesSessionBase: ServerSessionUnaryBase<Google_Cloud_Language_V1_AnalyzeEntitiesRequest, Google_Cloud_Language_V1_AnalyzeEntitiesResponse>, Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitiesSession {}

internal protocol Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitySentimentSession: ServerSessionUnary {}

fileprivate final class Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitySentimentSessionBase: ServerSessionUnaryBase<Google_Cloud_Language_V1_AnalyzeEntitySentimentRequest, Google_Cloud_Language_V1_AnalyzeEntitySentimentResponse>, Google_Cloud_Language_V1_LanguageServiceAnalyzeEntitySentimentSession {}

internal protocol Google_Cloud_Language_V1_LanguageServiceAnalyzeSyntaxSession: ServerSessionUnary {}

fileprivate final class Google_Cloud_Language_V1_LanguageServiceAnalyzeSyntaxSessionBase: ServerSessionUnaryBase<Google_Cloud_Language_V1_AnalyzeSyntaxRequest, Google_Cloud_Language_V1_AnalyzeSyntaxResponse>, Google_Cloud_Language_V1_LanguageServiceAnalyzeSyntaxSession {}

internal protocol Google_Cloud_Language_V1_LanguageServiceClassifyTextSession: ServerSessionUnary {}

fileprivate final class Google_Cloud_Language_V1_LanguageServiceClassifyTextSessionBase: ServerSessionUnaryBase<Google_Cloud_Language_V1_ClassifyTextRequest, Google_Cloud_Language_V1_ClassifyTextResponse>, Google_Cloud_Language_V1_LanguageServiceClassifyTextSession {}

internal protocol Google_Cloud_Language_V1_LanguageServiceAnnotateTextSession: ServerSessionUnary {}

fileprivate final class Google_Cloud_Language_V1_LanguageServiceAnnotateTextSessionBase: ServerSessionUnaryBase<Google_Cloud_Language_V1_AnnotateTextRequest, Google_Cloud_Language_V1_AnnotateTextResponse>, Google_Cloud_Language_V1_LanguageServiceAnnotateTextSession {}

